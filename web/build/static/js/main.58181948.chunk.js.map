{"version":3,"sources":["Components/Video/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","VideoContainer","video","UserLabel","p","Video","email","stream","muted","ref","useRef","useState","isMuted","setIsMuted","useEffect","current","srcObject","autoPlay","pc_config","iceServers","urls","App","socketRef","pcsRef","localVideoRef","localStreamRef","users","setUsers","getLocalStream","useCallback","a","navigator","mediaDevices","getUserMedia","audio","width","height","localStream","emit","room","console","log","createPeerConnection","socketID","pc","RTCPeerConnection","onicecandidate","e","candidate","candidateSendID","id","candidateReceiveID","oniceconnectionstatechange","ontrack","oldUsers","filter","user","concat","streams","getTracks","forEach","track","addTrack","error","io","connect","process","on","allUsers","createOffer","offerToReceiveAudio","offerToReceiveVideo","localSdp","setLocalDescription","RTCSessionDescription","sdp","offerSendID","offerSendEmail","offerReceiveID","data","setRemoteDescription","createAnswer","answerSendID","answerReceiveID","addIceCandidate","RTCIceCandidate","close","disconnect","style","margin","backgroundColor","map","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58181948.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n\tposition: relative;\n\tdisplay: inline-block;\n\twidth: 240px;\n\theight: 270px;\n\tmargin: 5px;\n`;\n\nconst VideoContainer = styled.video`\n\twidth: 240px;\n\theight: 240px;\n\tbackground-color: black;\n`;\n\nconst UserLabel = styled.p`\n\tdisplay: inline-block;\n\tposition: absolute;\n\ttop: 230px;\n\tleft: 0px;\n`;\n\ninterface Props {\n\temail: string;\n\tstream: MediaStream;\n\tmuted?: boolean;\n}\n\nconst Video = ({ email, stream, muted }: Props) => {\n\tconst ref = useRef<HTMLVideoElement>(null);\n\tconst [isMuted, setIsMuted] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tif (ref.current) ref.current.srcObject = stream;\n\t\tif (muted) setIsMuted(muted);\n\t}, [stream, muted]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<VideoContainer ref={ref} muted={isMuted} autoPlay />\n\t\t\t<UserLabel>{email}</UserLabel>\n\t\t</Container>\n\t);\n};\n\nexport default Video;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport Video from './Components/Video';\nimport { WebRTCUser } from './types';\n\nconst pc_config = {\n\ticeServers: [\n\t\t// {\n\t\t//   urls: 'stun:[STUN_IP]:[PORT]',\n\t\t//   'credentials': '[YOR CREDENTIALS]',\n\t\t//   'username': '[USERNAME]'\n\t\t// },\n\t\t{\n\t\t\turls: 'stun:stun.l.google.com:19302',\n\t\t},\n\t],\n};\n//http://localhost:8080/\nconst SOCKET_SERVER_URL: string =\n\tprocess.env.REACT_APP_API_URL || ('http://localhost:8080/' as string);\n\nconst App = () => {\n\tconst socketRef = useRef<SocketIOClient.Socket>();\n\tconst pcsRef = useRef<{ [socketId: string]: RTCPeerConnection }>({});\n\tconst localVideoRef = useRef<HTMLVideoElement>(null);\n\tconst localStreamRef = useRef<MediaStream>();\n\tconst [users, setUsers] = useState<WebRTCUser[]>([]);\n\n\tconst getLocalStream = useCallback(async () => {\n\t\ttry {\n\t\t\tconst localStream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\taudio: true,\n\t\t\t\tvideo: {\n\t\t\t\t\twidth: 240,\n\t\t\t\t\theight: 240,\n\t\t\t\t},\n\t\t\t});\n\t\t\tlocalStreamRef.current = localStream;\n\t\t\tif (localVideoRef.current) localVideoRef.current.srcObject = localStream;\n\t\t\tif (!socketRef.current) return;\n\t\t\tsocketRef.current.emit('join_room', {\n\t\t\t\troom: '1234',\n\t\t\t\temail: 'sample@naver.com',\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.log(`getUserMedia error: ${e}`);\n\t\t}\n\t}, []);\n\n\tconst createPeerConnection = useCallback((socketID: string, email: string) => {\n\t\ttry {\n\t\t\tconst pc = new RTCPeerConnection(pc_config);\n\n\t\t\tpc.onicecandidate = (e) => {\n\t\t\t\tif (!(socketRef.current && e.candidate)) return;\n\t\t\t\tconsole.log('onicecandidate');\n\t\t\t\tsocketRef.current.emit('candidate', {\n\t\t\t\t\tcandidate: e.candidate,\n\t\t\t\t\tcandidateSendID: socketRef.current.id,\n\t\t\t\t\tcandidateReceiveID: socketID,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tpc.oniceconnectionstatechange = (e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t};\n\n\t\t\tpc.ontrack = (e) => {\n\t\t\t\tconsole.log('ontrack success');\n\t\t\t\tsetUsers((oldUsers) =>\n\t\t\t\t\toldUsers\n\t\t\t\t\t\t.filter((user) => user.id !== socketID)\n\t\t\t\t\t\t.concat({\n\t\t\t\t\t\t\tid: socketID,\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tstream: e.streams[0],\n\t\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (localStreamRef.current) {\n\t\t\t\tconsole.log('localstream add');\n\t\t\t\tlocalStreamRef.current.getTracks().forEach((track) => {\n\t\t\t\t\tif (!localStreamRef.current) return;\n\t\t\t\t\tpc.addTrack(track, localStreamRef.current);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('no local stream');\n\t\t\t}\n\n\t\t\treturn pc;\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\treturn undefined;\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsocketRef.current = io.connect(SOCKET_SERVER_URL);\n\t\tgetLocalStream();\n\n\t\tsocketRef.current.on('all_users', (allUsers: Array<{ id: string; email: string }>) => {\n\t\t\tallUsers.forEach(async (user) => {\n\t\t\t\tif (!localStreamRef.current) return;\n\t\t\t\tconst pc = createPeerConnection(user.id, user.email);\n\t\t\t\tif (!(pc && socketRef.current)) return;\n\t\t\t\tpcsRef.current = { ...pcsRef.current, [user.id]: pc };\n\t\t\t\ttry {\n\t\t\t\t\tconst localSdp = await pc.createOffer({\n\t\t\t\t\t\tofferToReceiveAudio: true,\n\t\t\t\t\t\tofferToReceiveVideo: true,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log('create offer success');\n\t\t\t\t\tawait pc.setLocalDescription(new RTCSessionDescription(localSdp));\n\t\t\t\t\tsocketRef.current.emit('offer', {\n\t\t\t\t\t\tsdp: localSdp,\n\t\t\t\t\t\tofferSendID: socketRef.current.id,\n\t\t\t\t\t\tofferSendEmail: 'offerSendSample@sample.com',\n\t\t\t\t\t\tofferReceiveID: user.id,\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tsocketRef.current.on(\n\t\t\t'getOffer',\n\t\t\tasync (data: {\n\t\t\t\tsdp: RTCSessionDescription;\n\t\t\t\tofferSendID: string;\n\t\t\t\tofferSendEmail: string;\n\t\t\t}) => {\n\t\t\t\tconst { sdp, offerSendID, offerSendEmail } = data;\n\t\t\t\tconsole.log('get offer');\n\t\t\t\tif (!localStreamRef.current) return;\n\t\t\t\tconst pc = createPeerConnection(offerSendID, offerSendEmail);\n\t\t\t\tif (!(pc && socketRef.current)) return;\n\t\t\t\tpcsRef.current = { ...pcsRef.current, [offerSendID]: pc };\n\t\t\t\ttry {\n\t\t\t\t\tawait pc.setRemoteDescription(new RTCSessionDescription(sdp));\n\t\t\t\t\tconsole.log('answer set remote description success');\n\t\t\t\t\tconst localSdp = await pc.createAnswer({\n\t\t\t\t\t\tofferToReceiveVideo: true,\n\t\t\t\t\t\tofferToReceiveAudio: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait pc.setLocalDescription(new RTCSessionDescription(localSdp));\n\t\t\t\t\tsocketRef.current.emit('answer', {\n\t\t\t\t\t\tsdp: localSdp,\n\t\t\t\t\t\tanswerSendID: socketRef.current.id,\n\t\t\t\t\t\tanswerReceiveID: offerSendID,\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tsocketRef.current.on(\n\t\t\t'getAnswer',\n\t\t\t(data: { sdp: RTCSessionDescription; answerSendID: string }) => {\n\t\t\t\tconst { sdp, answerSendID } = data;\n\t\t\t\tconsole.log('get answer');\n\t\t\t\tconst pc: RTCPeerConnection = pcsRef.current[answerSendID];\n\t\t\t\tif (!pc) return;\n\t\t\t\tpc.setRemoteDescription(new RTCSessionDescription(sdp));\n\t\t\t},\n\t\t);\n\n\t\tsocketRef.current.on(\n\t\t\t'getCandidate',\n\t\t\tasync (data: { candidate: RTCIceCandidateInit; candidateSendID: string }) => {\n\t\t\t\tconsole.log('get candidate');\n\t\t\t\tconst pc: RTCPeerConnection = pcsRef.current[data.candidateSendID];\n\t\t\t\tif (!pc) return;\n\t\t\t\tawait pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n\t\t\t\tconsole.log('candidate add success');\n\t\t\t},\n\t\t);\n\n\t\tsocketRef.current.on('user_exit', (data: { id: string }) => {\n\t\t\tif (!pcsRef.current[data.id]) return;\n\t\t\tpcsRef.current[data.id].close();\n\t\t\tdelete pcsRef.current[data.id];\n\t\t\tsetUsers((oldUsers) => oldUsers.filter((user) => user.id !== data.id));\n\t\t});\n\n\t\treturn () => {\n\t\t\tif (socketRef.current) {\n\t\t\t\tsocketRef.current.disconnect();\n\t\t\t}\n\t\t\tusers.forEach((user) => {\n\t\t\t\tif (!pcsRef.current[user.id]) return;\n\t\t\t\tpcsRef.current[user.id].close();\n\t\t\t\tdelete pcsRef.current[user.id];\n\t\t\t});\n\t\t};\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [createPeerConnection, getLocalStream]);\n\n\treturn (\n\t\t<div>\n\t\t\t<video\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: 240,\n\t\t\t\t\theight: 240,\n\t\t\t\t\tmargin: 5,\n\t\t\t\t\tbackgroundColor: 'black',\n\t\t\t\t}}\n\t\t\t\tmuted\n\t\t\t\tref={localVideoRef}\n\t\t\t\tautoPlay\n\t\t\t/>\n\t\t\t{users.map((user, index) => (\n\t\t\t\t<Video key={index} email={user.email} stream={user.stream} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}